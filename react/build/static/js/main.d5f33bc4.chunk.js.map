{"version":3,"sources":["components/Rooms/JoinRoom.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Rooms/RadiusButtons.js","components/Rooms/CreateRoom.js","components/Rooms/Lobby.js","react-swipeable-cards/es/Card.js","react-swipeable-cards/es/CardWrapper.js","components/TinderCard/TinderCard.js","components/Swiping/Swiping.js","App.js","serviceWorker.js","index.js"],"names":["JoinRoomForm","props","state","roomNumber","handleChange","bind","goToRoom","event","this","setState","target","value","replace","length","alert","roomURL","history","push","onSubmit","submit","ref","node","setWrapperRef","className","type","placeholder","onChange","required","maxLength","pattern","onTouchStart","style","backgroundColor","onClick","React","Component","withRouter","Home","formShowing","window","location","assign","socket","emit","on","hasJoinedRoom","redirectHome","src","alt","JoinRoom","e","PageNotFound","to","icon","faArrowAltCircleLeft","size","RoomNotFound","UserDisconnect","RadiusButtons","active","radius","updateRadius","buttonStyle","width","display","fontSize","buttonActiveStyle","fontWeight","boxShadow","transform","paddingBottom","paddingTop","_handleClick","expressServer","process","CreateRoom","currentCity","longitude","latitude","locationRetrieved","loading","createJoinRoom","parentThis","pos","a","coords","fetch","method","headers","Accept","geocodeResult","status","text","then","geocodeResultText","Error","console","error","navigator","geolocation","warn","getCurrentPosition","err","message","code","enableHighAccuracy","body","JSON","stringify","city","result","json","resultJSON","catch","log","spinner","href","rel","faLocationArrow","margin","disabled","Lobby","match","params","participants","joinRoom","updateStateInfo","startSwiping","data","parse","participantsObjectArray","participantsArray","i","socketID","padding","Card","_Component","instance","Constructor","TypeError","_classCallCheck","_this","self","call","ReferenceError","_possibleConstructorReturn","classList","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","componentDidMount","onPan","isSwipeEnabled","isLeftSwipeEnabled","deltaX","isRightSwipeEnabled","center","x","y","rotate","onPanEnd","newClass","filter","s","moveOutWidth","document","clientWidth","keep","Math","abs","toggle","endX","max","velocityX","toX","endY","velocityY","deltaY","superOnSwipe","onSwipe","onSwipeLeft","onSwipeRight","onDoubleTap","render","createElement","Hammer","join","children","CardWrapper","setupCards","componentDidUpdate","container","querySelector","allCards","querySelectorAll","forEach","card","index","zIndex","opacity","add","renderCards","_this2","Children","map","child","cloneElement","renderEndCard","addEndCard","db","name","url","TinderCardComponent","characters","height","position","left","top","character","backgroundImage","Swiping","restaurants","restaurant","placeID","restaurantsArray","restaurantIndex","indexOf","additionalPhotos","curPhotoIndex","photoURL","photos","setTimeout","errMsg","restaurantName","key","rating","price","floor","distance","io","connect","reconnection","App","exact","path","component","Boolean","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5f33bc4.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass JoinRoomForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomNumber: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.goToRoom = this.goToRoom.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ roomNumber: event.target.value.replace(/\\D/, '') });\n    }\n\n    goToRoom() {\n        if (this.state.roomNumber.length !== 4) {\n            alert(\"Please enter a 4 digit room number.\");\n            this.setState({ roomNumber: \"\" });\n            return;\n        }\n        let roomURL = \"/rooms/\" + this.state.roomNumber;\n        this.props.history.push(roomURL);\n    }\n\n    render() {\n        return (\n            < form onSubmit={this.submit} ref={(node) => this.setWrapperRef = node}>\n                <input className=\"pop-up\"\n                    type=\"text\"\n                    value={this.state.roomNumber}\n                    placeholder=\"Room Number\"\n                    onChange={this.handleChange}\n                    required\n                    maxLength=\"4\"\n                    pattern=\"[0-9]*\"\n                />\n                <button\n                    onTouchStart=\"\"\n                    style={{ backgroundColor: \"rgb(95, 204, 95)\" }}\n                    onClick={this.goToRoom}>\n                    JOIN\n                </button>\n            </form >\n        )\n    }\n}\n\nexport default withRouter(JoinRoomForm);","import React from 'react';\nimport JoinRoomForm from '../Rooms/JoinRoom';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formShowing: false\n        }\n    }\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n    componentDidMount() {\n        // Check if already joined a room (e.g. if user clicked browser prev page to this page after joining a room)\n        let socket = this.props.socket;\n        socket.emit(\"check joined room\");\n\n        // Listen on already joined room response\n        socket.on('has joined room response', (hasJoinedRoom) => {\n            if (hasJoinedRoom) {\n                // We make the client refresh so it can leave the room and join as a new socket connection.\n                this.redirectHome();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"main-page\">\n                <img\n                    src={process.env.PUBLIC_URL + 'logo.png'}\n                    className=\"logo\"\n                    alt=\"Findalicious Icon\"\n                    onClick={() => this.setState({ formShowing: false })}\n                />\n                <div>\n                    {this.state.formShowing ?\n                        <JoinRoomForm /> :\n                        <div>\n                            <button\n                                className=\"pop-up\"\n                                onTouchStart=\"\"\n                                onClick={e => {\n                                    this.props.history.push(\"/create\");\n                                }}>\n                                CREATE ROOM\n                            </button>\n                            <button\n                                onTouchStart=\"\"\n                                onClick={() => this.setState({ formShowing: true })}>\n                                JOIN ROOM\n                            </button>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"main-page\">\n            <h2>Page Not Found</h2>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nfunction RoomNotFound() {\n    return (\n        <div className=\"main-page\">\n            <h2>Room Not Found</h2>\n            <p>Please make sure you've entered a valid room ID in the URL   </p>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nfunction UserDisconnect() {\n    return (\n        <div className=\"main-page\">\n            <h2>User Disconnected</h2>\n            <p>A user in your room has disconnected.</p>\n            <p>Tip: Make sure not to refresh your browser while swiping. </p>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nexport { PageNotFound, RoomNotFound, UserDisconnect };","import React from 'react';\n\nclass RadiusButtons extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: 1\n        }\n    }\n\n    _handleClick(radius) {\n        this.setState({ active: radius });\n        var updateRadius = this.props.updateRadius;\n        updateRadius(radius);\n    }\n\n    render() {\n        const buttonStyle = {\n            width: \"27%\",\n            display: \"inline-block\",\n            fontSize: \"small\",\n            backgroundColor: \"#b6b6b6\"\n        };\n        const buttonActiveStyle = {\n            width: \"27%\",\n            display: \"inline-block\",\n            fontSize: \"small\",\n            fontWeight: \"bolder\",\n            backgroundColor: \"#858585\",\n            boxShadow: \"0 0px rgba(153, 153, 153, 0.24)\",\n            transform: \"translateY(1px)\"\n        }\n        return (\n            <div style={{ paddingBottom: \"20px\", paddingTop: \"20px\" }}>\n                <button\n                    onTouchStart=\"\"\n                    onClick={this._handleClick.bind(this, 1)}\n                    style={this.state.active === 1 ? buttonActiveStyle : buttonStyle}>\n                    1KM\n                </button>\n                <button\n                    onTouchStart=\"\"\n                    onClick={this._handleClick.bind(this, 2)}\n                    style={this.state.active === 2 ? buttonActiveStyle : buttonStyle}>\n                    2KM\n                </button>\n                <button\n                    onTouchStart=\"\"\n                    onClick={this._handleClick.bind(this, 5)}\n                    style={this.state.active === 5 ? buttonActiveStyle : buttonStyle}>\n                    5KM\n                </button>\n            </div >\n        )\n    }\n}\n\nexport default RadiusButtons;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport RadiusButtons from './RadiusButtons';\nimport LoadingOverlay from 'react-loading-overlay';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\n\nclass CreateRoom extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCity: 'Retrieving Location...',\n            longitude: 0,\n            latitude: 0,\n            locationRetrieved: false,\n            radius: 1,\n            loading: false\n        };\n        this.createJoinRoom = this.createJoinRoom.bind(this);\n        this.goToRoom = this.goToRoom.bind(this);\n        this.updateRadius = this.updateRadius.bind(this);\n    }\n\n    updateRadius(radius) {\n        this.setState({ radius: radius });\n    }\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n\n    componentDidMount() {\n        let parentThis = this;\n\n        // Check if already joined a room (e.g. if user clicked browser prev page to this page after joining a room)\n        let socket = this.props.socket;\n        socket.emit(\"check joined room\");\n\n        // Listen on already joined room response\n        socket.on('has joined room response', (hasJoinedRoom) => {\n            if (hasJoinedRoom) {\n                // We make the client refresh so it can leave the room and join as a new socket connection.\n                this.redirectHome();\n            }\n        });\n\n        // Geolocation and reverse geocoding\n        let options = {\n            enableHighAccuracy: true\n        };\n\n        async function success(pos) {\n            let coords = pos.coords;\n            let latitude = coords.latitude;\n            let longitude = coords.longitude;\n            let state = { latitude: latitude, longitude: longitude, currentCity: \"Coordinates Retrieved...\" }\n            parentThis.setState(state);\n            try {\n                let geocodeResult = await fetch(expressServer + \"/api/location?longitude=\" + longitude + \"&latitude=\" + latitude, {\n                    method: \"GET\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n                if (geocodeResult.status === 200) {\n                    geocodeResult.text().then(geocodeResultText => {\n                        let state = { currentCity: geocodeResultText, locationRetrieved: true }\n                        parentThis.setState(state);\n                    });\n                } else {\n                    parentThis.setState({ currentCity: \"Cannot get location\" });\n                    throw new Error(\"Google geocoding API cannot get a location\");\n                }\n            } catch (e) {\n                parentThis.setState({ currentCity: \"Cannot get location\" });\n                console.error(e);\n            }\n        }\n\n        function error(err) {\n            alert(err.message);\n            console.warn(`ERROR(${err.code}): ${err.message}`);\n        }\n\n        if (!navigator.geolocation) {\n            alert(\"Browser geolocation must be enabled.\");\n            console.warn(\"Geolocation not enabled on this browser.\");\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error, options);\n    }\n\n    createJoinRoom() {\n        let longitude = this.state.longitude;\n        let latitude = this.state.latitude;\n        let radius = this.state.radius;\n        let currentCity = this.state.currentCity;\n        this.setState({ loading: true });\n        fetch(expressServer + \"/api/create-room\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                longitude: longitude,\n                latitude: latitude,\n                radius: radius,\n                city: currentCity\n            })\n        }).then(result => {\n            if (result.status === 200) {\n                result.json().then(resultJSON => {\n                    let roomNumber = resultJSON.roomNumber;\n                    let roomURL = \"/rooms/\" + roomNumber;\n                    this.goToRoom(roomURL);\n                });\n            } else if (result.status === 404) {\n                alert(\"No restaurants found in your area. Try a larger radius.\");\n            } else {\n                alert(\"Unknown error. Server may be down.\");\n                this.props.history.push('/');\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n    }\n\n    goToRoom(roomURL) {\n        this.props.history.push(roomURL);\n    }\n\n    render() {\n        return (\n            <LoadingOverlay\n                active={this.state.loading}\n                spinner={<BeatLoader />}\n                text='Creating Room...'\n            >\n                <div className=\"main-page\">\n                    <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n                    <h2> Restaurants Near </h2>\n                    <div>\n                        <FontAwesomeIcon icon={faLocationArrow} size=\"xs\" />\n                        <h4 style={{ display: \"inline-block\", margin: \"6px\" }}>{this.state.currentCity}</h4>\n                    </div>\n                    <RadiusButtons updateRadius={this.updateRadius.bind(this)} />\n                    <button\n                        onTouchStart=\"\"\n                        disabled={!this.state.locationRetrieved}\n                        onClick={this.createJoinRoom}>\n                        CREATE\n                </button>\n                </div>\n            </LoadingOverlay>\n        )\n    }\n}\n\nexport default CreateRoom;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props);\n        let roomNumber = this.props.match.params.roomNumber;\n        this.state = {\n            city: \"Retrieving...\",\n            roomNumber: roomNumber,\n            participants: []\n        }\n        this.joinRoom = this.joinRoom.bind(this);\n        this.updateStateInfo = this.updateStateInfo.bind(this);\n        this.startSwiping = this.startSwiping.bind(this);\n    }\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n    componentDidMount() {\n        let socket = this.props.socket;\n        this.joinRoom(this.state.roomNumber);\n        let parentThis = this;\n\n        // Listen on new user joining room\n        socket.on('room info', function (result) {\n            parentThis.updateStateInfo(result);\n        });\n\n        // Listen on whether joined invalid room\n        socket.on('general error', () => {\n            parentThis.props.history.push(\"/rooms\");\n        });\n\n        // Listen on user disconnect\n        socket.on('user disconnect', (result) => {\n            parentThis.updateStateInfo(result);\n        });\n\n        // Listen on attempting to join an already active room\n        socket.on('room active', () => {\n            alert(\"Room \" + this.state.roomNumber + \" has already begun swiping!\");\n            parentThis.redirectHome();\n        });\n\n        // Listen on room started swiping\n        socket.on('room started swiping', () => {\n            parentThis.props.history.push('/swiping', { roomNumber: this.state.roomNumber });\n        });\n    }\n\n    updateStateInfo(result) {\n        let data = JSON.parse(result);\n        // Set participants\n        let participantsObjectArray = data.participants;\n        let participantsArray = [];\n        for (let i = 0; i < participantsObjectArray.length; i++) {\n            participantsArray.push(participantsObjectArray[i].socketID)\n        }\n        this.setState({ participants: participantsArray });\n        // Set city\n        this.setState({ city: data.city });\n        // Set radius\n        this.setState({ radius: data.radius });\n    }\n\n    joinRoom(roomNumber) {\n        let socket = this.props.socket;\n        socket.emit('room', roomNumber);\n    }\n\n    startSwiping() {\n        let socket = this.props.socket;\n        socket.emit('initiate swiping');\n    }\n\n    render() {\n        return (\n            <div className=\"main-page\">\n                <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n                <h2> Room {this.state.roomNumber} </h2>\n                <div style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}>\n                    <h4> Looking for restaurants in</h4>\n                    <FontAwesomeIcon icon={faLocationArrow} size=\"xs\" />\n                    <h4 style={{ display: \"inline-block\", margin: \"2px\" }}>{this.state.city}</h4>\n                    <h4 style={{ padding: \"0px\" }}>\n                        {this.state.radius ? \"(\" + this.state.radius + \"KM radius)\" : \"\"}\n                    </h4>\n                </div>\n                <h4>\n                    {this.state.participants.length} user{(this.state.participants.length === 1) ? \"\" : \"s\"} in this room\n                </h4>\n\n                {/* TODO: DISABLE WHEN NOT ENTERED ROOM FULLY */}\n                <button\n                    onTouchStart=\"\"\n                    onClick={this.startSwiping}>\n                    EVERYONE IS IN\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Lobby;","import React, { Component } from \"react\";\nimport Hammer from \"react-hammerjs\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\nvar Card = function (_Component) {\n\t_inherits(Card, _Component);\n\n\tfunction Card(props) {\n\t\t_classCallCheck(this, Card);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {\n\t\t\tclassList: [\"card_container\"]\n\t\t};\n\t\treturn _this;\n\t}\n\n\tCard.prototype.componentDidMount = function componentDidMount() { };\n\n\tCard.prototype.onPan = function onPan(event) {\n\t\tif (this.props.isSwipeEnabled !== false) {\n\t\t\tif (this.props.isLeftSwipeEnabled !== false && event.deltaX <= 0 || this.props.isRightSwipeEnabled !== false && event.deltaX >= 0) {\n\t\t\t\tthis.state.classList.push('moving');\n\t\t\t\tif (event.deltaX === 0) return;\n\t\t\t\tif (event.center.x === 0 && event.center.y === 0) return;\n\t\t\t\tvar xMulti = event.deltaX * 0.08; // 0.03\n\t\t\t\tvar yMulti = 1; // event.deltaY / 80\n\t\t\t\tvar rotate = xMulti * yMulti;\n\t\t\t\t// console.log(event.deltaY)\n\t\t\t\t// event.target.style.transform = 'translate(' + event.deltaX + 'px, ' + event.deltaY + 'px) rotate(' + rotate + 'deg)';\n\t\t\t\tevent.target.style.transform = 'translate(' + event.deltaX + 'px, ' + 10 + 'px) rotate(' + rotate + 'deg)';\n\t\t\t}\n\t\t}\n\t};\n\n\tCard.prototype.onPanEnd = function onPanEnd(event) {\n\t\tif (this.props.isSwipeEnabled !== false) {\n\t\t\tif (this.props.isLeftSwipeEnabled !== false && event.deltaX <= 0 || this.props.isRightSwipeEnabled !== false && event.deltaX >= 0) {\n\t\t\t\tvar newClass = this.state.classList.filter(function (s) {\n\t\t\t\t\treturn s !== 'moving';\n\t\t\t\t});\n\t\t\t\tthis.setState({ classList: newClass });\n\t\t\t\tvar moveOutWidth = document.body.clientWidth;\n\t\t\t\tvar keep = Math.abs(event.deltaX) < 80;\n\t\t\t\tevent.target.classList.toggle('removed', !keep);\n\t\t\t\tif (keep) {\n\t\t\t\t\tevent.target.style.transform = '';\n\t\t\t\t} else {\n\t\t\t\t\tvar endX = Math.max(Math.abs(event.velocityX) * moveOutWidth, moveOutWidth);\n\t\t\t\t\tvar toX = event.deltaX > 0 ? endX : -endX;\n\t\t\t\t\tvar endY = Math.abs(event.velocityY) * moveOutWidth;\n\t\t\t\t\tvar toY = event.deltaY > 0 ? endY : -endY;\n\t\t\t\t\tvar xMulti = event.deltaX * 0.08; // 0.03\n\t\t\t\t\tvar yMulti = 1; // event.deltaY / 80\n\t\t\t\t\tvar rotate = xMulti * yMulti;\n\t\t\t\t\t// event.target.style.transform = 'translate(' + toX + 'px, ' + (toY + event.deltaY) + 'px) rotate(' + rotate + 'deg)';\n\t\t\t\t\tevent.target.style.transform = 'translate(' + toX + 'px, ' + (100) + 'px) rotate(' + rotate + 'deg)';\n\n\t\t\t\t\t// DO SWIPE ACTIONS\n\t\t\t\t\tthis.props.superOnSwipe();\n\t\t\t\t\tif (this.props.onSwipe) this.props.onSwipe(this.props.data);\n\t\t\t\t\tif (toX < 0 && this.props.onSwipeLeft) {\n\t\t\t\t\t\tthis.props.onSwipeLeft(this.props.data);\n\t\t\t\t\t} else if (this.props.onSwipeRight) {\n\t\t\t\t\t\tthis.props.onSwipeRight(this.props.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tCard.prototype.onDoubleTap = function onDoubleTap() {\n\t\tif (this.props.onDoubleTap) this.props.onDoubleTap(this.props.data);\n\t};\n\n\tCard.prototype.render = function render() {\n\t\treturn React.createElement(\n\t\t\tHammer,\n\t\t\t{ onPan: this.onPan.bind(this), onPanEnd: this.onPanEnd.bind(this), onDoubleTap: this.onDoubleTap.bind(this) },\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: this.state.classList.join(\" \"), style: this.props.style },\n\t\t\t\tthis.props.children\n\t\t\t)\n\t\t);\n\t};\n\n\treturn Card;\n}(Component);\n\nexport { Card as default };","import React, { Component } from 'react';\nimport \"../css/App.css\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CardWrapper = function (_Component) {\n\t_inherits(CardWrapper, _Component);\n\n\tfunction CardWrapper(props) {\n\t\t_classCallCheck(this, CardWrapper);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {};\n\t\treturn _this;\n\t}\n\n\tCardWrapper.prototype.componentDidMount = function componentDidMount() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.componentDidUpdate = function componentDidUpdate() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.setupCards = function setupCards() {\n\t\tvar container = document.querySelector('.container');\n\t\tvar allCards = document.querySelectorAll('.card_container');\n\t\tvar newCards = document.querySelectorAll('.card_container:not(.removed)');\n\t\tnewCards.forEach(function (card, index) {\n\t\t\tcard.style.zIndex = allCards.length - index;\n\t\t\tcard.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-' + 30 * index + 'px)';\n\t\t\tcard.style.opacity = (10 - index) / 10;\n\t\t});\n\t\tcontainer.classList.add('loaded');\n\t};\n\n\tCardWrapper.prototype.renderCards = function renderCards() {\n\t\tvar _this2 = this;\n\n\t\treturn React.Children.map(this.props.children, function (child) {\n\t\t\treturn React.cloneElement(child, { superOnSwipe: _this2.superOnSwipe.bind(_this2) });\n\t\t});\n\t};\n\n\tCardWrapper.prototype.renderEndCard = function renderEndCard() {\n\t\tif (this.props.addEndCard) {\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'card_container end_card' },\n\t\t\t\tthis.props.addEndCard()\n\t\t\t);\n\t\t}\n\t};\n\n\tCardWrapper.prototype.superOnSwipe = function superOnSwipe() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.render = function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'container', style: this.props.style },\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'cards_container' },\n\t\t\t\tthis.renderCards(),\n\t\t\t\tthis.renderEndCard()\n\t\t\t)\n\t\t);\n\t};\n\n\treturn CardWrapper;\n}(Component);\n\nexport default CardWrapper;","import React from 'react';\nimport './TinderCard.css';\nimport { Card, CardWrapper } from '../../react-swipeable-cards';\n\nconst db = [\n    {\n        name: 'Richard Hendricks',\n        url: './img/richard.jpg'\n    },\n    {\n        name: 'Erlich Bachman',\n        url: './img/erlich.jpg'\n    },\n    {\n        name: 'Monica Hall',\n        url: './img/monica.jpg'\n    },\n    {\n        name: 'Jared Dunn',\n        url: './img/jared.jpg'\n    },\n    {\n        name: 'Dinesh Chugtai',\n        url: './img/dinesh.jpg'\n    }\n]\n\nfunction TinderCardComponent() {\n    const characters = db;\n\n    // return (\n    //     <div>\n\n    //         <h1>React Tinder Card</h1>\n    //         <div className='cardContainer'>\n    //             {characters.map((character) =>\n    //                 <TinderCard\n    //                     className='swipe'\n    //                     key={character.name}\n    //                     onSwipe={(dir) => swiped(dir, character.name)}\n    //                     onCardLeftScreen={() => outOfFrame(character.name)}\n    //                     preventSwipe={['up', 'down']}>\n    //                     <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n    //                         <h4> $$</h4>\n    //                         <h3> {character.name}</h3>\n    //                     </div>\n    //                 </TinderCard>\n    //             )}\n    //         </div>\n    //         {\n    //             lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> :\n    //                 <h2 className='infoText'>No direction swiped</h2>\n    //         }\n    //     </div >\n    // );\n    const wrapperStyle = {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\",\n        left: \"0%\",\n        top: \"0%\",\n    }\n\n    return (\n        <div>\n            <CardWrapper style={wrapperStyle}>\n                {characters.map((character) =>\n                    <Card style={{ backgroundImage: 'url(' + character.url + ')' }}>\n                        <div className=\"restaurantName\">\n                            <h3>{character.name}</h3>\n                        </div>\n                        <div className=\"restaurantRatingPrice\">\n                            <h5> 4.6 | $$ </h5>\n                        </div>\n                        <div className=\"restaurantDistance\">\n                            <h5> 1.2KM </h5>\n                        </div>\n                    </Card>\n                )}\n\n            </CardWrapper>\n        </div >\n    );\n}\n\nexport default TinderCardComponent;","import React from 'react';\nimport './Swiping.css';\nimport { Card, CardWrapper } from '../../react-swipeable-cards';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\n\nclass Swiping extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restaurants: [],\n        };\n        this.onSwipeRight = this.onSwipeRight.bind(this);\n        this.onSwipeLeft = this.onSwipeLeft.bind(this);\n        this.onDoubleTap = this.onDoubleTap.bind(this);\n    }\n\n    onSwipeRight(restaurant) {\n        let socket = this.props.socket;\n        socket.emit(\"swipe\", restaurant.placeID);\n        console.log('removing: ' + restaurant.placeID + ' after swiping right');\n    }\n\n    onSwipeLeft(restaurant) {\n        let socket = this.props.socket;\n        socket.emit(\"swipe\");\n        console.log('removing: ' + restaurant.placeID + ' after swiping left');\n    }\n\n    onDoubleTap(restaurant) {\n        let restaurantsArray = this.state.restaurants;\n        let restaurantIndex = restaurantsArray.indexOf(restaurant);\n        let url = expressServer + \"/api/additionalPhotos/?id=\" + restaurant.placeID;\n        if (!restaurantsArray[restaurantIndex].additionalPhotos) {\n            // haven't fetched additional photos yet\n            fetch(url, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then(result => {\n                if (result.status === 200) {\n                    result.json().then(resultJSON => {\n                        let additionalPhotos = resultJSON.photos;\n                        restaurantsArray[restaurantIndex].additionalPhotos = additionalPhotos;\n                        restaurantsArray[restaurantIndex].photoURL = additionalPhotos[1];\n                        restaurantsArray[restaurantIndex].curPhotoIndex = 1;\n                        this.setState({ restaurants: restaurantsArray });\n                    });\n                } else {\n                    // Yelp API server did not find business details.\n                    console.error(\"Yelp API server did not find business details.\");\n                }\n            }).catch(e => {\n                console.log(e);\n            });\n        } else {\n            // additional photos have already been fetched\n            // cycle through additional photos\n            if (restaurantsArray[restaurantIndex].curPhotoIndex === 2) {\n                restaurantsArray[restaurantIndex].curPhotoIndex = 0;\n            } else {\n                restaurantsArray[restaurantIndex].curPhotoIndex += 1;\n            }\n            let curPhotoIndex = restaurantsArray[restaurantIndex].curPhotoIndex;\n            let additionalPhotos = restaurantsArray[restaurantIndex].additionalPhotos\n            restaurantsArray[restaurantIndex].photoURL = additionalPhotos[curPhotoIndex];\n            this.setState({ restaurants: restaurantsArray });\n        }\n        console.log(\"Finding next photo\");\n    }\n\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n\n    componentDidMount() {\n        let socket = this.props.socket;\n        if (!this.props.location.state.roomNumber) {\n            this.props.history.push('/');\n        }\n\n        let roomNumber = this.props.location.state.roomNumber;\n        fetch(expressServer + \"/api/rooms/?roomNumber=\" + roomNumber, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(result => {\n            if (result.status === 200) {\n                result.json().then(resultJSON => {\n                    this.setState(resultJSON);\n                });\n            } else if (result.status === 404) {\n                // Server failed to get the current roomNumber. This really should not happen.\n                // We make the client refresh so it can leave the room and join as a new socket connection. \n                alert(\"This room no longer exists.\");\n                window.setTimeout(this.redirectHome, 100);\n            } else {\n                // We make the client refresh so it can leave the room and join as a new socket connection.\n                alert(\"Something went wrong.\");\n                window.setTimeout(this.redirectHome, 100);\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n\n        // Listen for errors\n        socket.on('general error', (errMsg) => {\n            alert(errMsg);\n            // We make the client refresh so it can leave the room and join as a new socket connection.\n            window.setTimeout(this.redirectHome, 100);\n        });\n\n        // Listen for matches\n        socket.on('match found', (placeID) => {\n            let restaurantName;\n            for (let i = 0; i < this.state.restaurants.length; i++) {\n                if (this.state.restaurants[i].placeID === placeID) {\n                    restaurantName = this.state.restaurants[i].name;\n                    break;\n                }\n            }\n            alert(\"You all liked \" + restaurantName + \"!\");\n        });\n\n        // Listen on user disconnect\n        socket.on('user disconnect', () => {\n            // Make everyone disconnect for now, since it may be impossible to get matches\n            window.location.assign('/disconnect');\n        });\n\n        // Listen on user attempting to swipe when not in a room\n        socket.on(\"not in room swipe\", () => {\n            alert(\"You've disconnected or refreshed the page.\");\n            window.setTimeout(this.redirectHome, 100);\n        });\n    }\n\n    render() {\n\n        const wrapperStyle = {\n            width: \"100vw\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: \"0%\",\n            top: \"0%\",\n        }\n\n        return (\n            <div>\n                <CardWrapper style={wrapperStyle}>\n                    {this.state.restaurants.map((restaurant) =>\n                        <Card\n                            key={restaurant.placeID}\n                            data={restaurant}\n                            style={{ backgroundImage: 'url(' + restaurant.photoURL + ')' }}\n                            onSwipeRight={this.onSwipeRight.bind(this)}\n                            onSwipeLeft={this.onSwipeLeft.bind(this)}\n                            onDoubleTap={this.onDoubleTap.bind(this)}\n                        >\n                            <div className=\"restaurantName\">\n                                <h3>{restaurant.name}</h3>\n                            </div>\n                            <div className=\"restaurantRatingPrice\">\n                                <h5> {restaurant.rating} | {restaurant.price} </h5>\n                            </div>\n                            <div className=\"restaurantDistance\">\n                                <h5> {Math.floor(restaurant.distance)}M </h5>\n                            </div>\n                        </Card>\n                    )}\n                </CardWrapper>\n            </div >\n        );\n    }\n}\n\nexport default Swiping;","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport { RoomNotFound, PageNotFound, UserDisconnect } from './components/NotFound/NotFound';\nimport CreateRoom from './components/Rooms/CreateRoom';\nimport Lobby from './components/Rooms/Lobby';\nimport './App.css';\nimport io from 'socket.io-client';\nimport TinderCardComponent from './components/TinderCard/TinderCard';\nimport Swiping from './components/Swiping/Swiping';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\nlet socket = io.connect(expressServer, {\n  reconnection: true\n});\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/rooms/:roomNumber\" render={(props) => (<Lobby {...props} socket={socket} />)} />\n            <Route exact path='/' render={(props) => (<Home {...props} socket={socket} />)} />\n            <Route exact path='/create' render={(props) => (<CreateRoom {...props} socket={socket} />)} />\n            <Route exact path='/swiping' render={(props) => (<Swiping {...props} socket={socket} />)} />\n            <Route exact path=\"/rooms\" component={RoomNotFound} />\n            <Route exact path=\"/test\" component={TinderCardComponent} />\n            <Route exact path=\"/disconnect\" component={UserDisconnect} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport { App, socket };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}