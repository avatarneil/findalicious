{"version":3,"sources":["components/Rooms/JoinRoom.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Rooms/RadiusButtons.js","components/Rooms/CreateRoom.js","components/Rooms/Lobby.js","react-swipeable-cards/es/Card.js","react-swipeable-cards/es/CardWrapper.js","components/TinderCard/TinderCard.js","components/Swiping/Swiping.js","App.js","serviceWorker.js","index.js"],"names":["JoinRoomForm","props","state","roomNumber","handleChange","bind","goToRoom","event","this","setState","target","value","roomURL","history","push","onSubmit","submit","ref","node","setWrapperRef","className","type","placeholder","onChange","required","maxLength","pattern","onTouchStart","style","backgroundColor","onClick","React","Component","withRouter","Home","formShowing","src","alt","JoinRoom","e","PageNotFound","to","icon","faArrowAltCircleLeft","size","RoomNotFound","RadiusButtons","active","radius","updateRadius","buttonStyle","width","display","fontSize","buttonActiveStyle","fontWeight","boxShadow","transform","paddingBottom","paddingTop","_handleClick","expressServer","process","CreateRoom","currentCity","longitude","latitude","locationRetrieved","loading","createJoinRoom","parentThis","fetch","method","headers","Accept","then","geolocationResult","status","json","Promise","reject","geolocationResultJSON","location","lng","lat","geocodeResult","geocodeResultJSON","long_name","catch","console","log","body","JSON","stringify","city","result","resultJSON","alert","spinner","text","href","rel","faLocationArrow","margin","disabled","Lobby","match","params","participants","joinRoom","updateStateInfo","startSwiping","socket","on","data","emit","parse","participantsObjectArray","participantsArray","i","length","socketID","padding","Card","_Component","instance","Constructor","TypeError","_classCallCheck","_this","self","call","ReferenceError","_possibleConstructorReturn","classList","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","componentDidMount","onPan","isSwipeEnabled","isLeftSwipeEnabled","deltaX","isRightSwipeEnabled","center","x","y","rotate","deltaY","onPanEnd","newClass","filter","s","moveOutWidth","document","clientWidth","keep","Math","abs","toggle","endX","max","velocityX","toX","endY","velocityY","toY","superOnSwipe","onSwipe","onSwipeLeft","onSwipeRight","onDoubleTap","render","createElement","Hammer","join","children","CardWrapper","setupCards","componentDidUpdate","container","querySelector","allCards","querySelectorAll","forEach","card","index","zIndex","opacity","add","renderCards","_this2","Children","map","child","cloneElement","renderEndCard","addEndCard","db","name","url","TinderCardComponent","characters","useState","height","position","left","top","character","backgroundImage","Swiping","restaurants","restaurant","placeID","restaurantsArray","restaurantIndex","indexOf","additionalPhotos","curPhotoIndex","photoURL","photos","error","window","assign","setTimeout","redirectHome","errMsg","restaurantName","key","rating","price","floor","distance","io","connect","reconnection","App","exact","path","component","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.de394260.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass JoinRoomForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomNumber: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.goToRoom = this.goToRoom.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ roomNumber: event.target.value });\n    }\n\n    goToRoom() {\n        let roomURL = \"/rooms/\" + this.state.roomNumber;\n        this.props.history.push(roomURL);\n    }\n\n    render() {\n        return (\n            < form onSubmit={this.submit} ref={(node) => this.setWrapperRef = node}>\n                <input className=\"pop-up\"\n                    type=\"text\"\n                    value={this.state.roomNumber}\n                    placeholder=\"Room Number\"\n                    onChange={this.handleChange}\n                    required\n                    maxLength=\"4\"\n                    pattern=\"[0-9]*\"\n                />\n                <button\n                    onTouchStart=\"\"\n                    style={{ backgroundColor: \"rgb(95, 204, 95)\" }}\n                    onClick={this.goToRoom}>\n                    JOIN\n                </button>\n            </form >\n        )\n    }\n}\n\nexport default withRouter(JoinRoomForm);","import React from 'react';\nimport JoinRoomForm from '../Rooms/JoinRoom';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formShowing: false\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"main-page\">\n                <img\n                    src={process.env.PUBLIC_URL + 'logo.png'}\n                    className=\"logo\"\n                    alt=\"Chicken Tinder Icon\"\n                    onClick={() => this.setState({ formShowing: false })}\n                />\n                <div>\n                    {this.state.formShowing ?\n                        <JoinRoomForm /> :\n                        <div>\n                            <button\n                                className=\"pop-up\"\n                                onTouchStart=\"\"\n                                onClick={e => {\n                                    this.props.history.push(\"/create\");\n                                }}>\n                                CREATE ROOM\n                            </button>\n                            <button onTouchStart=\"\" onClick={() => this.setState({ formShowing: true })}>\n                                JOIN ROOM\n                            </button>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"main-page\">\n            <h2>Page Not Found</h2>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nfunction RoomNotFound() {\n    return (\n        <div className=\"main-page\">\n            <h2>Room Not Found</h2>\n            <p>Please make sure you've entered a valid room ID in the URL   </p>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nexport { PageNotFound, RoomNotFound };","import React from 'react';\n\nclass RadiusButtons extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: 1\n        }\n    }\n\n    _handleClick(radius) {\n        this.setState({ active: radius });\n        var updateRadius = this.props.updateRadius;\n        updateRadius(radius);\n    }\n\n    render() {\n        const buttonStyle = {\n            width: \"27%\",\n            display: \"inline-block\",\n            fontSize: \"small\",\n            backgroundColor: \"#b6b6b6\"\n        };\n        const buttonActiveStyle = {\n            width: \"27%\",\n            display: \"inline-block\",\n            fontSize: \"small\",\n            fontWeight: \"bolder\",\n            backgroundColor: \"#858585\",\n            boxShadow: \"0 0px rgba(153, 153, 153, 0.24)\",\n            transform: \"translateY(1px)\"\n        }\n        return (\n            <div style={{ paddingBottom: \"20px\", paddingTop: \"20px\" }}>\n                <button\n                    onTouchStart=\"\"\n                    onClick={this._handleClick.bind(this, 1)}\n                    style={this.state.active === 1 ? buttonActiveStyle : buttonStyle}>\n                    1KM\n                </button>\n                <button\n                    onTouchStart=\"\"\n                    onClick={this._handleClick.bind(this, 2)}\n                    style={this.state.active === 2 ? buttonActiveStyle : buttonStyle}>\n                    2KM\n                </button>\n                <button\n                    onTouchStart=\"\"\n                    onClick={this._handleClick.bind(this, 5)}\n                    style={this.state.active === 5 ? buttonActiveStyle : buttonStyle}>\n                    5KM\n                </button>\n            </div >\n        )\n    }\n}\n\nexport default RadiusButtons;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport RadiusButtons from './RadiusButtons';\nimport LoadingOverlay from 'react-loading-overlay';\nimport BeatLoader from 'react-spinners/BeatLoader'\n// import { socket } from '../../App';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\nlet googleKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nclass CreateRoom extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCity: 'Retrieving Location...',\n            longitude: 0,\n            latitude: 0,\n            locationRetrieved: false,\n            radius: 1,\n            loading: false\n        };\n        this.createJoinRoom = this.createJoinRoom.bind(this);\n        this.goToRoom = this.goToRoom.bind(this);\n        this.updateRadius = this.updateRadius.bind(this);\n    }\n\n    updateRadius(radius) {\n        this.setState({ radius: radius });\n    }\n\n    componentDidMount() {\n        // let socket = this.props.socket;\n        let parentThis = this;\n\n        // if (\"geolocation\" in navigator) {\n        //     // check if geolocation is supported/enabled on current browser\n        //     navigator.geolocation.getCurrentPosition().then(\n        //         (position) => {\n        //             let state = {\n        //                 longitude: position.coords.longitude,\n        //                 latitude: position.coords.latitude,\n        //                 currentCity: \"Coordinates Retrieved...\"\n        //             }\n        //             this.setState(state);\n        //         }\n        //     );\n        // } else {\n        //     // geolocation is not supported\n        //     parentThis.setState({ currentCity: \"Browser did not provide location\" });\n        //     console.log('geolocation is not enabled on this browser');\n        //     fetch(\"https://www.googleapis.com/geolocation/v1/geolocate?key=\" + googleKey, {\n        //         method: \"POST\",\n        //         headers: {\n        //             Accept: 'application/json',\n        //             'Content-Type': 'application/json',\n        //         }\n        //     }).then(geolocationResult => {\n        //         if (geolocationResult.status === 200) {\n        //             return geolocationResult.json();\n        //         } else {\n        //             parentThis.setState({ currentCity: \"Cannot get coordinates\" });\n        //             return Promise.reject(\"Google geolocation API cannot get coordinates\");\n        //         }\n        //     });\n        // }\n\n        fetch(\"https://www.googleapis.com/geolocation/v1/geolocate?key=\" + googleKey, {\n            method: \"POST\",\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(geolocationResult => {\n            if (geolocationResult.status === 200) {\n                return geolocationResult.json()\n            } else {\n                parentThis.setState({ currentCity: \"Cannot get coordinates\" });\n                return Promise.reject(\"Google geolocation API cannot get coordinates\");\n            }\n        }).then(geolocationResultJSON => {\n            let longitude = geolocationResultJSON.location.lng;\n            let latitude = geolocationResultJSON.location.lat;\n            let state = { longitude: longitude, latitude: latitude, currentCity: \"Coordinates Retrieved...\" }\n            parentThis.setState(state);\n            return fetch(expressServer + \"/api/location?longitude=\" + longitude + \"&latitude=\" + latitude, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }).then(geocodeResult => {\n            if (geocodeResult.status === 200) {\n                geocodeResult.json().then(geocodeResultJSON => {\n                    let state = { currentCity: geocodeResultJSON.long_name, locationRetrieved: true }\n                    parentThis.setState(state);\n                });\n            } else {\n                parentThis.setState({ currentCity: \"Cannot get location\" });\n                Promise.reject(\"Google geocoding API cannot get a location\");\n            }\n        }).catch(e => {\n            parentThis.setState({ currentCity: \"Cannot get location\" });\n            console.log(e);\n        });\n    }\n\n    createJoinRoom() {\n        let longitude = this.state.longitude;\n        let latitude = this.state.latitude;\n        let radius = this.state.radius;\n        let currentCity = this.state.currentCity;\n        this.setState({ loading: true });\n        fetch(expressServer + \"/api/create-room\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            // credentials: \"include\",\n            body: JSON.stringify({\n                longitude: longitude,\n                latitude: latitude,\n                radius: radius,\n                city: currentCity\n            })\n        }).then(result => {\n            if (result.status === 200) {\n                result.json().then(resultJSON => {\n                    let roomNumber = resultJSON.roomNumber;\n                    let roomURL = \"/rooms/\" + roomNumber;\n                    this.goToRoom(roomURL);\n                });\n            } else if (result.status === 404) {\n                alert(\"No restaurants found in your area. Try a larger radius.\");\n            } else {\n                alert(\"Unknown error. Server may be down.\");\n                this.props.history.push('/');\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n    }\n\n    goToRoom(roomURL) {\n        this.props.history.push(roomURL);\n    }\n\n    render() {\n        // let updateRadius = this.updateRadius;\n\n        return (\n            <LoadingOverlay\n                active={this.state.loading}\n                spinner={<BeatLoader />}\n                text='Creating Room...'\n            >\n                <div className=\"main-page\">\n                    <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n                    <h2> Restaurants Near </h2>\n                    <div>\n                        <FontAwesomeIcon icon={faLocationArrow} size=\"xs\" />\n                        <h4 style={{ display: \"inline-block\", margin: \"6px\" }}>{this.state.currentCity}</h4>\n                    </div>\n                    <RadiusButtons updateRadius={this.updateRadius.bind(this)} />\n                    <button\n                        onTouchStart=\"\"\n                        disabled={!this.state.locationRetrieved}\n                        onClick={this.createJoinRoom}>\n                        CREATE\n                </button>\n                </div>\n            </LoadingOverlay>\n\n        )\n    }\n}\n\nexport default CreateRoom;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props);\n        let roomNumber = this.props.match.params.roomNumber;\n        this.state = {\n            city: \"Retrieving...\",\n            roomNumber: roomNumber,\n            participants: []\n        }\n        this.joinRoom = this.joinRoom.bind(this);\n        this.updateStateInfo = this.updateStateInfo.bind(this);\n        this.startSwiping = this.startSwiping.bind(this);\n    }\n\n    componentDidMount() {\n        let socket = this.props.socket;\n        this.joinRoom(this.state.roomNumber);\n        let parentThis = this;\n\n        // Listen on new user joining room\n        socket.on('room info', function (result) {\n            parentThis.updateStateInfo(result);\n        });\n\n        // Listen on whether joined invalid room\n        socket.on('general error', () => {\n            parentThis.props.history.push(\"/rooms\");\n        });\n\n        // Listen on user disconnect\n        socket.on('user disconnect', (result) => {\n            parentThis.updateStateInfo(result);\n        });\n\n        // Listen on attempting to join an already active room\n        socket.on('room active', () => {\n            alert(\"Room \" + this.state.roomNumber + \" has already begun swiping!\");\n            parentThis.props.history.push(\"/\");\n        });\n\n        // Listen on room started swiping\n        socket.on('room started swiping', () => {\n            parentThis.props.history.push('/swiping', { roomNumber: this.state.roomNumber });\n        });\n\n        // Heart beat to prevent socket going idle\n        socket.on('ping', function (data) {\n            console.log(\"ping received from server\");\n            socket.emit('pong');\n        });\n    }\n\n    updateStateInfo(result) {\n        let data = JSON.parse(result);\n        // Set participants\n        let participantsObjectArray = data.participants;\n        let participantsArray = [];\n        for (let i = 0; i < participantsObjectArray.length; i++) {\n            participantsArray.push(participantsObjectArray[i].socketID)\n        }\n        this.setState({ participants: participantsArray });\n        // Set city\n        this.setState({ city: data.city });\n        // Set radius\n        this.setState({ radius: data.radius });\n    }\n\n    joinRoom(roomNumber) {\n        let socket = this.props.socket;\n        socket.emit('room', roomNumber);\n    }\n\n    startSwiping() {\n        let socket = this.props.socket;\n        socket.emit('initiate swiping');\n    }\n\n    render() {\n        return (\n            <div className=\"main-page\">\n                <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n                <h2> Room {this.state.roomNumber} </h2>\n                <div style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}>\n                    <h4> Looking for restaurants in</h4>\n                    <FontAwesomeIcon icon={faLocationArrow} size=\"xs\" />\n                    <h4 style={{ display: \"inline-block\", margin: \"2px\" }}>{this.state.city}</h4>\n                    <h4 style={{ padding: \"0px\" }}>\n                        {this.state.radius ? \"(\" + this.state.radius + \"KM radius)\" : \"\"}\n                    </h4>\n                </div>\n                <h4>\n                    {this.state.participants.length} user{(this.state.participants.length === 1) ? \"\" : \"s\"} in this room\n                </h4>\n\n                {/* TODO: DISABLE WHEN NOT ENTERED ROOM FULLY */}\n                <button\n                    onTouchStart=\"\"\n                    onClick={this.startSwiping}>\n                    EVERYONE IS IN\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Lobby;","import React, { Component } from \"react\";\nimport Hammer from \"react-hammerjs\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\nvar Card = function (_Component) {\n\t_inherits(Card, _Component);\n\n\tfunction Card(props) {\n\t\t_classCallCheck(this, Card);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {\n\t\t\tclassList: [\"card_container\"]\n\t\t};\n\t\treturn _this;\n\t}\n\n\tCard.prototype.componentDidMount = function componentDidMount() { };\n\n\tCard.prototype.onPan = function onPan(event) {\n\t\tif (this.props.isSwipeEnabled !== false) {\n\t\t\tif (this.props.isLeftSwipeEnabled !== false && event.deltaX <= 0 || this.props.isRightSwipeEnabled !== false && event.deltaX >= 0) {\n\t\t\t\tthis.state.classList.push('moving');\n\t\t\t\tif (event.deltaX === 0) return;\n\t\t\t\tif (event.center.x === 0 && event.center.y === 0) return;\n\t\t\t\tvar xMulti = event.deltaX * 0.03;\n\t\t\t\tvar yMulti = event.deltaY / 80;\n\t\t\t\tvar rotate = xMulti * yMulti;\n\t\t\t\tevent.target.style.transform = 'translate(' + event.deltaX + 'px, ' + event.deltaY + 'px) rotate(' + rotate + 'deg)';\n\t\t\t}\n\t\t}\n\t};\n\n\tCard.prototype.onPanEnd = function onPanEnd(event) {\n\t\tif (this.props.isSwipeEnabled !== false) {\n\t\t\tif (this.props.isLeftSwipeEnabled !== false && event.deltaX <= 0 || this.props.isRightSwipeEnabled !== false && event.deltaX >= 0) {\n\t\t\t\tvar newClass = this.state.classList.filter(function (s) {\n\t\t\t\t\treturn s !== 'moving';\n\t\t\t\t});\n\t\t\t\tthis.setState({ classList: newClass });\n\t\t\t\tvar moveOutWidth = document.body.clientWidth;\n\t\t\t\tvar keep = Math.abs(event.deltaX) < 5;\n\t\t\t\tevent.target.classList.toggle('removed', !keep);\n\t\t\t\tif (keep) {\n\t\t\t\t\tevent.target.style.transform = '';\n\t\t\t\t} else {\n\t\t\t\t\tvar endX = Math.max(Math.abs(event.velocityX) * moveOutWidth, moveOutWidth);\n\t\t\t\t\tvar toX = event.deltaX > 0 ? endX : -endX;\n\t\t\t\t\tvar endY = Math.abs(event.velocityY) * moveOutWidth;\n\t\t\t\t\tvar toY = event.deltaY > 0 ? endY : -endY;\n\t\t\t\t\tvar xMulti = event.deltaX * 0.03;\n\t\t\t\t\tvar yMulti = event.deltaY / 80;\n\t\t\t\t\tvar rotate = xMulti * yMulti;\n\t\t\t\t\tevent.target.style.transform = 'translate(' + toX + 'px, ' + (toY + event.deltaY) + 'px) rotate(' + rotate + 'deg)';\n\t\t\t\t\t// DO SWIPE ACTIONS\n\t\t\t\t\tthis.props.superOnSwipe();\n\t\t\t\t\tif (this.props.onSwipe) this.props.onSwipe(this.props.data);\n\t\t\t\t\tif (toX < 0 && this.props.onSwipeLeft) {\n\t\t\t\t\t\tthis.props.onSwipeLeft(this.props.data);\n\t\t\t\t\t} else if (this.props.onSwipeRight) {\n\t\t\t\t\t\tthis.props.onSwipeRight(this.props.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tCard.prototype.onDoubleTap = function onDoubleTap() {\n\t\tif (this.props.onDoubleTap) this.props.onDoubleTap(this.props.data);\n\t};\n\n\tCard.prototype.render = function render() {\n\t\treturn React.createElement(\n\t\t\tHammer,\n\t\t\t{ onPan: this.onPan.bind(this), onPanEnd: this.onPanEnd.bind(this), onDoubleTap: this.onDoubleTap.bind(this) },\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: this.state.classList.join(\" \"), style: this.props.style },\n\t\t\t\tthis.props.children\n\t\t\t)\n\t\t);\n\t};\n\n\treturn Card;\n}(Component);\n\nexport { Card as default };","import React, { Component } from 'react';\nimport \"../css/App.css\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CardWrapper = function (_Component) {\n\t_inherits(CardWrapper, _Component);\n\n\tfunction CardWrapper(props) {\n\t\t_classCallCheck(this, CardWrapper);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {};\n\t\treturn _this;\n\t}\n\n\tCardWrapper.prototype.componentDidMount = function componentDidMount() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.componentDidUpdate = function componentDidUpdate() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.setupCards = function setupCards() {\n\t\tvar container = document.querySelector('.container');\n\t\tvar allCards = document.querySelectorAll('.card_container');\n\t\tvar newCards = document.querySelectorAll('.card_container:not(.removed)');\n\t\tnewCards.forEach(function (card, index) {\n\t\t\tcard.style.zIndex = allCards.length - index;\n\t\t\tcard.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-' + 30 * index + 'px)';\n\t\t\tcard.style.opacity = (10 - index) / 10;\n\t\t});\n\t\tcontainer.classList.add('loaded');\n\t};\n\n\tCardWrapper.prototype.renderCards = function renderCards() {\n\t\tvar _this2 = this;\n\n\t\treturn React.Children.map(this.props.children, function (child) {\n\t\t\treturn React.cloneElement(child, { superOnSwipe: _this2.superOnSwipe.bind(_this2) });\n\t\t});\n\t};\n\n\tCardWrapper.prototype.renderEndCard = function renderEndCard() {\n\t\tif (this.props.addEndCard) {\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'card_container end_card' },\n\t\t\t\tthis.props.addEndCard()\n\t\t\t);\n\t\t}\n\t};\n\n\tCardWrapper.prototype.superOnSwipe = function superOnSwipe() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.render = function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'container', style: this.props.style },\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'cards_container' },\n\t\t\t\tthis.renderCards(),\n\t\t\t\tthis.renderEndCard()\n\t\t\t)\n\t\t);\n\t};\n\n\treturn CardWrapper;\n}(Component);\n\nexport default CardWrapper;","import React, { useState } from 'react';\nimport './TinderCard.css';\n// import TinderCard from 'react-tinder-card'\nimport { Card, CardWrapper } from '../../react-swipeable-cards';\n\nconst db = [\n    {\n        name: 'Richard Hendricks',\n        url: './img/richard.jpg'\n    },\n    {\n        name: 'Erlich Bachman',\n        url: './img/erlich.jpg'\n    },\n    {\n        name: 'Monica Hall',\n        url: './img/monica.jpg'\n    },\n    {\n        name: 'Jared Dunn',\n        url: './img/jared.jpg'\n    },\n    {\n        name: 'Dinesh Chugtai',\n        url: './img/dinesh.jpg'\n    }\n]\n\nfunction TinderCardComponent() {\n    const characters = db;\n    const [lastDirection, setLastDirection] = useState();\n\n    const swiped = (direction, nameToDelete) => {\n        console.log('removing: ' + nameToDelete)\n        setLastDirection(direction)\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name + ' left the screen!')\n    }\n\n    // return (\n    //     <div>\n\n    //         <h1>React Tinder Card</h1>\n    //         <div className='cardContainer'>\n    //             {characters.map((character) =>\n    //                 <TinderCard\n    //                     className='swipe'\n    //                     key={character.name}\n    //                     onSwipe={(dir) => swiped(dir, character.name)}\n    //                     onCardLeftScreen={() => outOfFrame(character.name)}\n    //                     preventSwipe={['up', 'down']}>\n    //                     <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n    //                         <h4> $$</h4>\n    //                         <h3> {character.name}</h3>\n    //                     </div>\n    //                 </TinderCard>\n    //             )}\n    //         </div>\n    //         {\n    //             lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> :\n    //                 <h2 className='infoText'>No direction swiped</h2>\n    //         }\n    //     </div >\n    // );\n    const wrapperStyle = {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\",\n        left: \"0%\",\n        top: \"0%\",\n    }\n\n    const cardStyle = {\n        // position: \"relative\",\n        // width: \"80vw\",\n        // maxWidth: \"260px\",\n        // height: \"300px\",\n        // borderRadius: \"20px\",\n        // justifyContent: \"center\",\n        // backgroundSize: \"cover\",\n        // backgroundPosition: \"center\",\n        // backgroundImage: 'url(' + character.url + ')',\n    }\n    return (\n        <div>\n            <CardWrapper style={wrapperStyle}>\n                {characters.map((character) =>\n                    <Card style={{ backgroundImage: 'url(' + character.url + ')' }}>\n                        <div className=\"restaurantName\">\n                            <h3>{character.name}</h3>\n                        </div>\n                        <div className=\"restaurantRatingPrice\">\n                            <h5> 4.6 | $$ </h5>\n                        </div>\n                        <div className=\"restaurantDistance\">\n                            <h5> 1.2KM </h5>\n                        </div>\n                    </Card>\n                )}\n\n            </CardWrapper>\n        </div >\n    );\n}\n\nexport default TinderCardComponent;","import React from 'react';\nimport './Swiping.css';\nimport { Card, CardWrapper } from '../../react-swipeable-cards';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\n\nclass Swiping extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restaurants: [],\n        };\n        this.onSwipeRight = this.onSwipeRight.bind(this);\n        this.onSwipeLeft = this.onSwipeLeft.bind(this);\n        this.onDoubleTap = this.onDoubleTap.bind(this);\n    }\n\n    onSwipeRight(restaurant) {\n        let socket = this.props.socket;\n        socket.emit(\"swipe right\", restaurant.placeID);\n        console.log('removing: ' + restaurant.placeID + ' after swiping right');\n    }\n\n    onSwipeLeft(restaurant) {\n        console.log('removing: ' + restaurant.placeID + ' after swiping left');\n    }\n\n    onDoubleTap(restaurant) {\n        let parentThis = this;\n        let restaurantsArray = this.state.restaurants;\n        let restaurantIndex = restaurantsArray.indexOf(restaurant);\n        let url = expressServer + \"/api/additionalPhotos/?id=\" + restaurant.placeID;\n        if (!restaurantsArray[restaurantIndex].additionalPhotos) {\n            // haven't fetched additional photos yet\n            fetch(url, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then(result => {\n                if (result.status === 200) {\n                    result.json().then(resultJSON => {\n                        let additionalPhotos = resultJSON.photos;\n                        restaurantsArray[restaurantIndex].additionalPhotos = additionalPhotos;\n                        restaurantsArray[restaurantIndex].photoURL = additionalPhotos[1];\n                        restaurantsArray[restaurantIndex].curPhotoIndex = 1;\n                        parentThis.setState({ restaurants: restaurantsArray });\n                    });\n                } else {\n                    // Yelp API server did not find business details.\n                    console.error(\"Yelp API server did not find business details.\");\n                }\n            }).catch(e => {\n                console.log(e);\n            });\n        } else {\n            // additional photos have already been fetched\n            // cycle through additional photos\n            if (restaurantsArray[restaurantIndex].curPhotoIndex === 2) {\n                restaurantsArray[restaurantIndex].curPhotoIndex = 0;\n            } else {\n                restaurantsArray[restaurantIndex].curPhotoIndex += 1;\n            }\n            let curPhotoIndex = restaurantsArray[restaurantIndex].curPhotoIndex;\n            let additionalPhotos = restaurantsArray[restaurantIndex].additionalPhotos\n            restaurantsArray[restaurantIndex].photoURL = additionalPhotos[curPhotoIndex];\n            parentThis.setState({ restaurants: restaurantsArray });\n        }\n        console.log(\"Finding next photo\");\n    }\n\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n\n    componentDidMount() {\n        let socket = this.props.socket;\n        let parentThis = this;\n        if (!this.props.location.state.roomNumber) {\n            this.props.history.push('/');\n        }\n        let roomNumber = this.props.location.state.roomNumber;\n        fetch(expressServer + \"/api/rooms/?roomNumber=\" + roomNumber, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(result => {\n            if (result.status === 200) {\n                result.json().then(resultJSON => {\n                    parentThis.setState(resultJSON);\n                });\n            } else if (result.status === 404) {\n                // Server failed to get the current roomNumber. This really should not happen.\n                // We make the client refresh so it can leave the room and join as a new socket connection. \n                alert(\"This room no longer exists.\");\n                window.setTimeout(this.redirectHome, 100);\n            } else {\n                // We make the client refresh so it can leave the room and join as a new socket connection.\n                alert(\"Something went wrong.\");\n                window.setTimeout(this.redirectHome, 100);\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n\n        // Listen for errors\n        socket.on('general error', (errMsg) => {\n            alert(errMsg);\n            // We make the client refresh so it can leave the room and join as a new socket connection.\n            window.setTimeout(this.redirectHome, 100);\n        });\n\n        // Listen for matches\n        socket.on('match found', (placeID) => {\n            let restaurantName;\n            for (let i = 0; i < this.state.restaurants.length; i++) {\n                if (this.state.restaurants[i].placeID === placeID) {\n                    restaurantName = this.state.restaurants[i].name;\n                    break;\n                }\n            }\n            alert(\"You all liked \" + restaurantName + \"!\");\n        });\n\n        // Listen on user disconnect\n        socket.on('user disconnect', () => {\n            alert(\"A user swiping in your room has disconnected!\");\n            // Make everyone disconnect for now, since it may be impossible to get matches\n            window.setTimeout(this.redirectHome, 100);\n        });\n\n        // Heart beat to prevent socket going idle\n        socket.on('ping', function (data) {\n            console.log(\"ping received from server\");\n            socket.emit('pong');\n        });\n    }\n\n    render() {\n\n        const wrapperStyle = {\n            width: \"100vw\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: \"0%\",\n            top: \"0%\",\n        }\n\n        return (\n            <div>\n                <CardWrapper style={wrapperStyle}>\n                    {this.state.restaurants.map((restaurant) =>\n                        <Card\n                            key={restaurant.placeID}\n                            data={restaurant}\n                            style={{ backgroundImage: 'url(' + restaurant.photoURL + ')' }}\n                            onSwipeRight={this.onSwipeRight.bind(this)}\n                            onSwipeLeft={this.onSwipeLeft.bind(this)}\n                            onDoubleTap={this.onDoubleTap.bind(this)}\n                        >\n                            <div className=\"restaurantName\">\n                                <h3>{restaurant.name}</h3>\n                            </div>\n                            <div className=\"restaurantRatingPrice\">\n                                <h5> {restaurant.rating} | {restaurant.price} </h5>\n                            </div>\n                            <div className=\"restaurantDistance\">\n                                <h5> {Math.floor(restaurant.distance)}M </h5>\n                            </div>\n                        </Card>\n                    )}\n                </CardWrapper>\n            </div >\n        );\n    }\n}\n\nexport default Swiping;","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport { RoomNotFound, PageNotFound } from './components/NotFound/NotFound';\nimport CreateRoom from './components/Rooms/CreateRoom';\nimport Lobby from './components/Rooms/Lobby';\nimport './App.css';\nimport io from 'socket.io-client';\nimport TinderCardComponent from './components/TinderCard/TinderCard';\nimport Swiping from './components/Swiping/Swiping';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\nlet socket = io.connect(expressServer, {\n  reconnection: true\n});\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/rooms/:roomNumber\" render={(props) => (<Lobby {...props} socket={socket} />)} />\n            <Route exact path='/' component={Home} />\n            <Route exact path='/create' render={(props) => (<CreateRoom {...props} socket={socket} />)} />\n            <Route exact path='/swiping' render={(props) => (<Swiping {...props} socket={socket} />)} />\n            <Route exact path=\"/rooms\" component={RoomNotFound} />\n            <Route exact path=\"/test\" component={TinderCardComponent} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport { App, socket };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}