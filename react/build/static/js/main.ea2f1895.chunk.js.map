{"version":3,"sources":["components/Rooms/JoinRoom.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Rooms/RadiusButtons.js","components/Rooms/CreateRoom.js","components/Rooms/Lobby.js","react-swipeable-cards/es/Card.js","react-swipeable-cards/es/CardWrapper.js","components/TinderCard/TinderCard.js","components/Swiping/Match.js","components/Swiping/EndCard.js","components/Swiping/Swiping.js","App.js","serviceWorker.js","index.js"],"names":["JoinRoomForm","props","state","roomNumber","handleChange","bind","goToRoom","event","this","setState","target","value","replace","length","alert","roomURL","history","push","onSubmit","submit","ref","node","setWrapperRef","className","type","placeholder","onChange","required","maxLength","pattern","style","backgroundColor","onClick","React","Component","withRouter","Home","formShowing","window","location","assign","socket","emit","hasJoinedRoom","src","alt","JoinRoom","e","PageNotFound","to","icon","faArrowAltCircleLeft","size","RoomNotFound","UserDisconnect","RoomAlreadyStartedSwiping","RadiusButtons","active","radius","updateRadius","buttonStyle","width","display","fontSize","buttonActiveStyle","fontWeight","boxShadow","transform","paddingBottom","paddingTop","justifyContent","alignItems","_handleClick","expressServer","process","CreateRoom","currentCity","longitude","latitude","locationRetrieved","loading","createJoinRoom","parentThis","pos","a","coords","fetch","method","headers","Accept","geocodeResult","status","text","then","geocodeResultText","Error","console","error","navigator","geolocation","warn","getCurrentPosition","err","message","code","enableHighAccuracy","body","JSON","stringify","city","result","json","resultJSON","catch","log","spinner","href","rel","faLocationArrow","margin","disabled","Lobby","match","params","participants","joinRoom","updateStateInfo","startSwiping","redirectHome","on","errMsg","data","parse","participantsObjectArray","participantsArray","i","socketID","padding","Card","_Component","instance","Constructor","TypeError","_classCallCheck","_this","self","call","ReferenceError","_possibleConstructorReturn","classList","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","componentDidMount","onPan","isSwipeEnabled","isLeftSwipeEnabled","deltaX","isRightSwipeEnabled","center","x","y","rotate","onPanEnd","newClass","filter","s","moveOutWidth","document","clientWidth","keep","Math","abs","toggle","endX","max","velocityX","toX","endY","velocityY","deltaY","superOnSwipe","onSwipe","onSwipeLeft","onSwipeRight","onDoubleTap","render","createElement","Hammer","join","children","CardWrapper","setupCards","componentDidUpdate","container","querySelector","allCards","querySelectorAll","forEach","card","index","zIndex","add","renderCards","_this2","Children","map","child","cloneElement","renderEndCard","addEndCard","db","name","url","restaurant","MyEndCard","marginTop","marginBottom","TinderCardComponent","characters","wrapperStyle","height","position","left","top","popupStyle","flexDirection","animation","borderRadius","webkitBoxShadow","restaurantPhotoStyle","open","googleDirectionParameterArray","split","googleDirectionsParameter","word","googleDirectionsURL","getEndCard","character","backgroundImage","closeOnDocumentClick","contentStyle","yelpURL","photoURL","rating","price","floor","distance","address","color","faDirections","EndCard","Swiping","restaurants","matchedRestaurant","matchOpen","closeModal","placeID","restaurantsArray","restaurantIndex","indexOf","additionalPhotos","curPhotoIndex","photos","setTimeout","key","onClose","io","connect","reconnection","App","exact","path","component","Boolean","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea2f1895.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass JoinRoomForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomNumber: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.goToRoom = this.goToRoom.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ roomNumber: event.target.value.replace(/\\D/, '') });\n    }\n\n    goToRoom() {\n        if (this.state.roomNumber.length !== 4) {\n            alert(\"Please enter a 4 digit room number.\");\n            this.setState({ roomNumber: \"\" });\n            return;\n        }\n        let roomURL = \"/rooms/\" + this.state.roomNumber;\n        this.props.history.push(roomURL);\n    }\n\n    render() {\n        return (\n            < form onSubmit={this.submit} ref={(node) => this.setWrapperRef = node}>\n                <input className=\"pop-up\"\n                    type=\"text\"\n                    value={this.state.roomNumber}\n                    placeholder=\"Room Number\"\n                    onChange={this.handleChange}\n                    required\n                    maxLength=\"4\"\n                    pattern=\"[0-9]*\"\n                />\n                <button\n                    style={{ backgroundColor: \"rgb(95, 204, 95)\" }}\n                    onClick={this.goToRoom}>\n                    JOIN\n                </button>\n            </form >\n        )\n    }\n}\n\nexport default withRouter(JoinRoomForm);","import React from 'react';\nimport JoinRoomForm from '../Rooms/JoinRoom';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formShowing: false\n        }\n    }\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n    componentDidMount() {\n        // Check if already joined a room (e.g. if user clicked browser prev page to this page after joining a room)\n        let socket = this.props.socket;\n        socket.emit(\"check joined room\", function (hasJoinedRoom) {\n            if (hasJoinedRoom) {\n                // Leave the previous room since client is at home page.\n                socket.emit('leave room');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"main-page\">\n                <img\n                    src={process.env.PUBLIC_URL + 'logo.png'}\n                    className=\"logo\"\n                    alt=\"Findalicious Icon\"\n                    onClick={() => this.setState({ formShowing: false })}\n                />\n                {this.state.formShowing ?\n                    <JoinRoomForm /> :\n                    <div>\n                        <button\n                            className=\"pop-up\"\n                            onClick={e => {\n                                this.props.history.push(\"/create\");\n                            }}>\n                            CREATE ROOM\n                            </button>\n                        <button\n                            onClick={() => this.setState({ formShowing: true })}>\n                            JOIN ROOM\n                            </button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nfunction PageNotFound() {\n    return (\n        <div className=\"main-page\">\n            <h2>Page Not Found</h2>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nfunction RoomNotFound() {\n    return (\n        <div className=\"main-page\">\n            <h2>Room Not Found</h2>\n            <p>Please make sure you've entered a valid room ID in the URL   </p>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nfunction UserDisconnect() {\n    return (\n        <div className=\"main-page\">\n            <h2>User Disconnected</h2>\n            <p>A user in your room has disconnected.</p>\n            <p>Tip: Make sure your friends don't refresh their browsers while swiping. </p>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nfunction RoomAlreadyStartedSwiping() {\n    return (\n        <div className=\"main-page\">\n            <h2>Room Already Swiping</h2>\n            <p>Make sure you are in the room before your friends press \"EVERYONE IS IN\".</p>\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n            </Link>\n        </div>\n    );\n}\n\nexport { PageNotFound, RoomNotFound, UserDisconnect, RoomAlreadyStartedSwiping };","import React from 'react';\n\nclass RadiusButtons extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: 1\n        }\n    }\n\n    _handleClick(radius) {\n        this.setState({ active: radius });\n        var updateRadius = this.props.updateRadius;\n        updateRadius(radius);\n    }\n\n    render() {\n        const buttonStyle = {\n            width: \"auto\",\n            display: \"inline-block\",\n            fontSize: \"small\",\n            backgroundColor: \"#b6b6b6\"\n        };\n        const buttonActiveStyle = {\n            width: \"auto\",\n            display: \"inline-block\",\n            fontSize: \"small\",\n            fontWeight: \"bolder\",\n            backgroundColor: \"#858585\",\n            boxShadow: \"0 0px rgba(153, 153, 153, 0.24)\",\n            transform: \"translateY(1px)\"\n        }\n\n        const containerStyle = {\n            paddingBottom: \"20px\",\n            paddingTop: \"20px\",\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n        }\n        return (\n            <div style={containerStyle}>\n                <button\n                    onClick={this._handleClick.bind(this, 1)}\n                    style={this.state.active === 1 ? buttonActiveStyle : buttonStyle}>\n                    1KM\n                </button>\n                <button\n                    onClick={this._handleClick.bind(this, 2)}\n                    style={this.state.active === 2 ? buttonActiveStyle : buttonStyle}>\n                    2KM\n                </button>\n                <button\n                    onClick={this._handleClick.bind(this, 5)}\n                    style={this.state.active === 5 ? buttonActiveStyle : buttonStyle}>\n                    5KM\n                </button>\n            </div >\n        )\n    }\n}\n\nexport default RadiusButtons;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport RadiusButtons from './RadiusButtons';\nimport LoadingOverlay from 'react-loading-overlay';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\n\nclass CreateRoom extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCity: 'Retrieving Location...',\n            longitude: 0,\n            latitude: 0,\n            locationRetrieved: false,\n            radius: 1,\n            loading: false\n        };\n        this.createJoinRoom = this.createJoinRoom.bind(this);\n        this.goToRoom = this.goToRoom.bind(this);\n        this.updateRadius = this.updateRadius.bind(this);\n    }\n\n    updateRadius(radius) {\n        this.setState({ radius: radius });\n    }\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n    componentDidMount() {\n        let parentThis = this;\n\n        // Check if already joined a room (e.g. if user clicked browser prev page to this page after joining a room)\n        let socket = this.props.socket;\n        socket.emit(\"check joined room\", function (hasJoinedRoom) {\n            if (hasJoinedRoom) {\n                // Leave the previous room since client is at home page.\n                socket.emit('leave room');\n            }\n        });\n\n        // Geolocation and reverse geocoding\n        let options = {\n            enableHighAccuracy: true\n        };\n\n        async function success(pos) {\n            let coords = pos.coords;\n            let latitude = coords.latitude;\n            let longitude = coords.longitude;\n            let state = { latitude: latitude, longitude: longitude, currentCity: \"Coordinates Retrieved...\" }\n            parentThis.setState(state);\n            try {\n                let geocodeResult = await fetch(expressServer + \"/api/location?longitude=\" + longitude + \"&latitude=\" + latitude, {\n                    method: \"GET\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n                if (geocodeResult.status === 200) {\n                    geocodeResult.text().then(geocodeResultText => {\n                        let state = { currentCity: geocodeResultText, locationRetrieved: true }\n                        parentThis.setState(state);\n                    });\n                } else {\n                    parentThis.setState({ currentCity: \"Cannot get location\" });\n                    throw new Error(\"Google geocoding API cannot get a location\");\n                }\n            } catch (e) {\n                parentThis.setState({ currentCity: \"Cannot get location\" });\n                console.error(e);\n            }\n        }\n\n        function error(err) {\n            alert(err.message);\n            console.warn(`ERROR(${err.code}): ${err.message}`);\n        }\n\n        if (!navigator.geolocation) {\n            alert(\"Browser geolocation must be enabled.\");\n            console.warn(\"Geolocation not enabled on this browser.\");\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error, options);\n    }\n\n    createJoinRoom() {\n        let longitude = this.state.longitude;\n        let latitude = this.state.latitude;\n        let radius = this.state.radius;\n        let currentCity = this.state.currentCity;\n        this.setState({ loading: true });\n        fetch(expressServer + \"/api/create-room\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                longitude: longitude,\n                latitude: latitude,\n                radius: radius,\n                city: currentCity\n            })\n        }).then(result => {\n            if (result.status === 200) {\n                result.json().then(resultJSON => {\n                    let roomNumber = resultJSON.roomNumber;\n                    let roomURL = \"/rooms/\" + roomNumber;\n                    this.goToRoom(roomURL);\n                });\n            } else if (result.status === 404) {\n                this.setState({ loading: false });\n                alert(\"No restaurants found in your area. Try a larger radius.\");\n            } else {\n                alert(\"Unknown error. Server may be down.\");\n                this.props.history.push('/');\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n    }\n\n    goToRoom(roomURL) {\n        this.props.history.push(roomURL);\n    }\n\n    render() {\n        return (\n            <LoadingOverlay\n                active={this.state.loading}\n                spinner={<BeatLoader />}\n                text='Creating Room...'\n            >\n                <div className=\"main-page\">\n                    <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n                    <h2> Restaurants Near </h2>\n                    <div>\n                        <FontAwesomeIcon icon={faLocationArrow} size=\"xs\" />\n                        <h4 style={{ display: \"inline-block\", margin: \"6px\" }}>{this.state.currentCity}</h4>\n                    </div>\n                    <RadiusButtons updateRadius={this.updateRadius.bind(this)} />\n                    <button\n                        disabled={!this.state.locationRetrieved}\n                        onClick={this.createJoinRoom}>\n                        CREATE\n                </button>\n                </div>\n            </LoadingOverlay>\n        )\n    }\n}\n\nexport default CreateRoom;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props);\n        let roomNumber = this.props.match.params.roomNumber;\n        this.state = {\n            city: \"Retrieving...\",\n            roomNumber: roomNumber,\n            participants: []\n        }\n        this.joinRoom = this.joinRoom.bind(this);\n        this.updateStateInfo = this.updateStateInfo.bind(this);\n        this.startSwiping = this.startSwiping.bind(this);\n    }\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n    componentDidMount() {\n        let socket = this.props.socket;\n        let parentThis = this;\n\n        // Check if already joined a room (e.g. if user clicked browser prev page to this page after joining a room)\n        socket.emit(\"check joined room\", function (hasJoinedRoom) {\n            if (hasJoinedRoom) {\n                // User should NOT have already joined a room at this page's mounting, so we redirect to home.\n                // No need to leave room since we are using location.assign. The user will get disconnected and\n                // automatically leave the room on server side.\n                parentThis.redirectHome();\n            } else {\n                // Attempt to join room\n                parentThis.joinRoom(parentThis.state.roomNumber);\n            }\n        });\n\n        // Listen on new user joining room\n        socket.on('room info', (result) => {\n            this.updateStateInfo(result);\n        });\n\n        // Listen on whether joined invalid room\n        socket.on('invalid room error', (errMsg) => {\n            console.error(errMsg);\n            this.props.history.push(\"/rooms\");\n        });\n\n        // Listen on general errors\n        socket.on('general error', (e) => {\n            alert(\"Server error\");\n            console.error(e);\n            this.redirectHome();\n        });\n\n        // Listen on user disconnect\n        socket.on('user disconnect', (result) => {\n            this.updateStateInfo(result);\n        });\n\n        // Listen on attempting to join an already active room\n        socket.on('room already swiping', () => {\n            // No need to leave room since we are using location.assign. The user will get disconnected and\n            // automatically leave the room on server side.\n            window.location.assign('/already-swiping');\n        });\n\n        // Listen on room started swiping\n        socket.on('room started swiping', () => {\n            this.props.history.push('/swiping', { roomNumber: this.state.roomNumber });\n        });\n    }\n\n    updateStateInfo(result) {\n        let data = JSON.parse(result);\n        // Set participants\n        let participantsObjectArray = data.participants;\n        let participantsArray = [];\n        for (let i = 0; i < participantsObjectArray.length; i++) {\n            participantsArray.push(participantsObjectArray[i].socketID)\n        }\n        this.setState({ participants: participantsArray });\n        // Set city\n        this.setState({ city: data.city });\n        // Set radius\n        this.setState({ radius: data.radius });\n    }\n\n    joinRoom(roomNumber) {\n        let socket = this.props.socket;\n        socket.emit('room', roomNumber);\n    }\n\n    startSwiping() {\n        let socket = this.props.socket;\n        socket.emit('initiate swiping');\n    }\n\n    render() {\n        return (\n            <div className=\"main-page\">\n                <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n                <h2> Room {this.state.roomNumber} </h2>\n                <div style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}>\n                    <h4> Looking for restaurants near</h4>\n                    <FontAwesomeIcon icon={faLocationArrow} size=\"xs\" />\n                    <h4 style={{ display: \"inline-block\", margin: \"2px\" }}>{this.state.city}</h4>\n                    <h4 style={{ padding: \"0px\" }}>\n                        {this.state.radius ? \"(\" + this.state.radius + \"KM radius)\" : \"\"}\n                    </h4>\n                </div>\n                <h4>\n                    {this.state.participants.length} user{(this.state.participants.length === 1) ? \"\" : \"s\"} in this room\n                </h4>\n\n                {/* TODO: DISABLE WHEN NOT ENTERED ROOM FULLY */}\n                <button\n                    onClick={this.startSwiping}>\n                    EVERYONE IS IN\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Lobby;","import React, { Component } from \"react\";\nimport Hammer from \"react-hammerjs\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\nvar Card = function (_Component) {\n\t_inherits(Card, _Component);\n\n\tfunction Card(props) {\n\t\t_classCallCheck(this, Card);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {\n\t\t\tclassList: [\"card_container\"]\n\t\t};\n\t\treturn _this;\n\t}\n\n\tCard.prototype.componentDidMount = function componentDidMount() { };\n\n\tCard.prototype.onPan = function onPan(event) {\n\t\tif (this.props.isSwipeEnabled !== false) {\n\t\t\tif (this.props.isLeftSwipeEnabled !== false && event.deltaX <= 0 || this.props.isRightSwipeEnabled !== false && event.deltaX >= 0) {\n\t\t\t\tthis.state.classList.push('moving');\n\t\t\t\tif (event.deltaX === 0) return;\n\t\t\t\tif (event.center.x === 0 && event.center.y === 0) return;\n\t\t\t\tvar xMulti = event.deltaX * 0.08; // 0.03\n\t\t\t\tvar yMulti = 1; // event.deltaY / 80\n\t\t\t\tvar rotate = xMulti * yMulti;\n\t\t\t\t// console.log(event.deltaY)\n\t\t\t\t// event.target.style.transform = 'translate(' + event.deltaX + 'px, ' + event.deltaY + 'px) rotate(' + rotate + 'deg)';\n\t\t\t\tevent.target.style.transform = 'translate(' + event.deltaX + 'px, ' + 10 + 'px) rotate(' + rotate + 'deg)';\n\t\t\t}\n\t\t}\n\t};\n\n\tCard.prototype.onPanEnd = function onPanEnd(event) {\n\t\tif (this.props.isSwipeEnabled !== false) {\n\t\t\tif (this.props.isLeftSwipeEnabled !== false && event.deltaX <= 0 || this.props.isRightSwipeEnabled !== false && event.deltaX >= 0) {\n\t\t\t\tvar newClass = this.state.classList.filter(function (s) {\n\t\t\t\t\treturn s !== 'moving';\n\t\t\t\t});\n\t\t\t\tthis.setState({ classList: newClass });\n\t\t\t\tvar moveOutWidth = document.body.clientWidth;\n\t\t\t\tvar keep = Math.abs(event.deltaX) < 80;\n\t\t\t\tevent.target.classList.toggle('removed', !keep);\n\t\t\t\tif (keep) {\n\t\t\t\t\tevent.target.style.transform = '';\n\t\t\t\t} else {\n\t\t\t\t\tvar endX = Math.max(Math.abs(event.velocityX) * moveOutWidth, moveOutWidth);\n\t\t\t\t\tvar toX = event.deltaX > 0 ? endX : -endX;\n\t\t\t\t\tvar endY = Math.abs(event.velocityY) * moveOutWidth;\n\t\t\t\t\tvar toY = event.deltaY > 0 ? endY : -endY;\n\t\t\t\t\tvar xMulti = event.deltaX * 0.08; // 0.03\n\t\t\t\t\tvar yMulti = 1; // event.deltaY / 80\n\t\t\t\t\tvar rotate = xMulti * yMulti;\n\t\t\t\t\t// event.target.style.transform = 'translate(' + toX + 'px, ' + (toY + event.deltaY) + 'px) rotate(' + rotate + 'deg)';\n\t\t\t\t\tevent.target.style.transform = 'translate(' + toX + 'px, ' + (100) + 'px) rotate(' + rotate + 'deg)';\n\n\t\t\t\t\t// DO SWIPE ACTIONS\n\t\t\t\t\tthis.props.superOnSwipe();\n\t\t\t\t\tif (this.props.onSwipe) this.props.onSwipe(this.props.data);\n\t\t\t\t\tif (toX < 0 && this.props.onSwipeLeft) {\n\t\t\t\t\t\tthis.props.onSwipeLeft(this.props.data);\n\t\t\t\t\t} else if (this.props.onSwipeRight) {\n\t\t\t\t\t\tthis.props.onSwipeRight(this.props.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tCard.prototype.onDoubleTap = function onDoubleTap() {\n\t\tif (this.props.onDoubleTap) this.props.onDoubleTap(this.props.data);\n\t};\n\n\tCard.prototype.render = function render() {\n\t\treturn React.createElement(\n\t\t\tHammer,\n\t\t\t{ onPan: this.onPan.bind(this), onPanEnd: this.onPanEnd.bind(this), onDoubleTap: this.onDoubleTap.bind(this) },\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: this.state.classList.join(\" \"), style: this.props.style },\n\t\t\t\tthis.props.children\n\t\t\t)\n\t\t);\n\t};\n\n\treturn Card;\n}(Component);\n\nexport { Card as default };","import React, { Component } from 'react';\nimport \"../css/App.css\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CardWrapper = function (_Component) {\n\t_inherits(CardWrapper, _Component);\n\n\tfunction CardWrapper(props) {\n\t\t_classCallCheck(this, CardWrapper);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\t_this.state = {};\n\t\treturn _this;\n\t}\n\n\tCardWrapper.prototype.componentDidMount = function componentDidMount() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.componentDidUpdate = function componentDidUpdate() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.setupCards = function setupCards() {\n\t\tvar container = document.querySelector('.container');\n\t\tvar allCards = document.querySelectorAll('.card_container');\n\t\tvar newCards = document.querySelectorAll('.card_container:not(.removed)');\n\t\tnewCards.forEach(function (card, index) {\n\t\t\tcard.style.zIndex = allCards.length - index;\n\t\t\tcard.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-' + 30 * index + 'px)';\n\t\t\t// card.style.opacity = (10 - index) / 10;\n\t\t});\n\t\tcontainer.classList.add('loaded');\n\t};\n\n\tCardWrapper.prototype.renderCards = function renderCards() {\n\t\tvar _this2 = this;\n\n\t\treturn React.Children.map(this.props.children, function (child) {\n\t\t\treturn React.cloneElement(child, { superOnSwipe: _this2.superOnSwipe.bind(_this2) });\n\t\t});\n\t};\n\n\tCardWrapper.prototype.renderEndCard = function renderEndCard() {\n\t\tif (this.props.addEndCard) {\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'card_container end_card' },\n\t\t\t\tthis.props.addEndCard()\n\t\t\t);\n\t\t}\n\t};\n\n\tCardWrapper.prototype.superOnSwipe = function superOnSwipe() {\n\t\tthis.setupCards();\n\t};\n\n\tCardWrapper.prototype.render = function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'container', style: this.props.style },\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'cards_container' },\n\t\t\t\tthis.renderCards(),\n\t\t\t\tthis.renderEndCard()\n\t\t\t)\n\t\t);\n\t};\n\n\treturn CardWrapper;\n}(Component);\n\nexport default CardWrapper;","import React from 'react';\nimport './TinderCard.css';\nimport { Card, CardWrapper } from '../../react-swipeable-cards';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft, faDirections } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport Match from '../Swiping/Match';\nimport Popup from \"reactjs-popup\";\n\nconst db = [\n    {\n        name: 'Richard Hendricks',\n        url: './img/richard.jpg'\n    },\n    {\n        name: 'Erlich Bachman',\n        url: './img/erlich.jpg'\n    },\n    {\n        name: 'Monica Hall',\n        url: './img/monica.jpg'\n    },\n    {\n        name: 'Jared Dunn',\n        url: './img/jared.jpg'\n    },\n    {\n        name: 'Dinesh Chugtai',\n        url: './img/dinesh.jpg'\n    }\n]\n\nconst restaurant = {\n    \"likeCount\": 0,\n    \"curPhotoIndex\": 0,\n    \"_id\": \"5eb8a684fef73341ddbe70aa\",\n    \"placeID\": \"JG9UpsFR6hrqQqsKh_RyaQ\",\n    \"name\": \"Planta Yorkville\",\n    \"yelpURL\": \"https://www.yelp.com/biz/planta-yorkville-toronto?adjust_creative=H2a2zKRulYyVB3G_8hMC0w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=H2a2zKRulYyVB3G_8hMC0w\",\n    \"address\": \"1221 Bay Street\",\n    \"distance\": 219.3041184346589,\n    \"photoURL\": \"https://s3-media4.fl.yelpcdn.com/bphoto/RRck-ty3S6iSzrvv2WlWGw/o.jpg\",\n    \"price\": \"$$\",\n    \"rating\": 4\n}\n\nclass MyEndCard extends React.Component {\n    render() {\n        const textStyle = {\n            margin: \"20px\",\n            marginTop: \"5px\",\n            marginBottom: \"35px\",\n        }\n        return (\n            <div>\n                <img\n                    src={process.env.PUBLIC_URL + 'logo.png'}\n                    className=\"logo\"\n                    alt=\"Findalicious Icon\"\n                />\n\n                <h3> THAT'S ALL WE FOUND </h3>\n                <p style={textStyle}> Your friends might still be swiping...</p>\n\n                <Link to=\"/\">\n                    <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n                </Link>\n            </div>\n        );\n    }\n}\n\nclass TinderCardComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: true };\n        // this.openModal = this.openModal.bind(this);\n        // this.closeModal = this.closeModal.bind(this);\n    }\n\n    characters = db;\n\n    wrapperStyle = {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\",\n        left: \"0%\",\n        top: \"0%\",\n    }\n\n    popupStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"240px\",\n        animation: \"popup 600ms\",\n        padding: \"15px\",\n        backgroundColor: \"white\",\n        borderRadius: \"15px\",\n        boxShadow: \"0 0 22px 2px #ffffffc4\",\n        webkitBoxShadow: \"0 0 18px 0px #ffffffc4\"\n    }\n\n    restaurantPhotoStyle = {\n        width: \"240px\",\n        borderRadius: \"10px\"\n    }\n\n    getEndCard() {\n        return (\n            <MyEndCard />\n        );\n    }\n\n    render() {\n\n        let googleDirectionParameterArray = restaurant.name.split(\" \");\n        let googleDirectionsParameter = \"\";\n        for (let word = 0; word < googleDirectionParameterArray.length - 1; word++) {\n            googleDirectionsParameter += googleDirectionParameterArray[word] + \"+\";\n        }\n        googleDirectionsParameter += googleDirectionParameterArray[googleDirectionParameterArray.length - 1];\n        let googleDirectionsURL = \"https://www.google.com/maps/dir/?api=1&destination=\" + googleDirectionsParameter;\n\n        return (\n            <div>\n                <link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'></link>\n                <CardWrapper style={this.wrapperStyle} addEndCard={this.getEndCard.bind(this)}>\n                    {this.characters.map((character) =>\n                        <Card style={{ backgroundImage: 'url(' + character.url + ')' }}>\n                            <div className=\"restaurantName\">\n                                <h3>{character.name}</h3>\n                            </div>\n                            <div className=\"restaurantRatingPrice\">\n                                <h5> 4.6 | $$ </h5>\n                            </div>\n                            <div className=\"restaurantDistance\">\n                                <h5> 1.2KM </h5>\n                            </div>\n                        </Card>\n                    )}\n                </CardWrapper>\n                <Popup\n                    open={this.state.open}\n                    closeOnDocumentClick\n                    contentStyle={this.popupStyle}\n                >\n                    <div>\n                        <h3 className=\"matchTitle\">You all liked</h3>\n                        <h2 className=\"matchName\"> {restaurant.name}</h2>\n                        <div>\n                            <a href={restaurant.yelpURL}>\n                                <img src={restaurant.photoURL} style={this.restaurantPhotoStyle} />\n                            </a>\n                            <div className=\"restaurantRatingPrice\">\n                                <h5> {restaurant.rating} | {restaurant.price} </h5>\n                            </div>\n                            <div className=\"restaurantDistance\">\n                                <h5> {Math.floor(restaurant.distance)} M</h5>\n                            </div>\n                        </div>\n                        <h4>{restaurant.address}</h4>\n                        <a href={googleDirectionsURL}>\n                            <FontAwesomeIcon style={{ color: \"#797986\" }} icon={faDirections} size=\"2x\" />\n                        </a>\n                    </div>\n                </Popup>\n            </div >\n        );\n\n    }\n}\n\nexport default TinderCardComponent;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDirections } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport Popup from \"reactjs-popup\";\n\nclass Match extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restaurant: this.props.restaurant,\n            // open: this.props.open\n        };\n    }\n\n    popupStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"240px\",\n        animation: \"popup 600ms\",\n        padding: \"15px\",\n        backgroundColor: \"white\",\n        borderRadius: \"15px\",\n        boxShadow: \"0 0 22px 2px #ffffffc4\",\n        webkitBoxShadow: \"0 0 18px 0px #ffffffc4\"\n    }\n\n    restaurantPhotoStyle = {\n        width: \"240px\",\n        borderRadius: \"10px\"\n    }\n\n    render() {\n\n        let restaurant = this.state.restaurant;\n\n        let googleDirectionParameterArray = restaurant.name.split(\" \");\n        let googleDirectionsParameter = \"\";\n        for (let word = 0; word < googleDirectionParameterArray.length - 1; word++) {\n            googleDirectionsParameter += googleDirectionParameterArray[word] + \"+\";\n        }\n        googleDirectionsParameter += googleDirectionParameterArray[googleDirectionParameterArray.length - 1];\n        let googleDirectionsURL = \"https://www.google.com/maps/dir/?api=1&destination=\" + googleDirectionsParameter;\n\n        return (\n            <div>\n                <h3 className=\"matchTitle\">You all liked</h3>\n                <h2 className=\"matchName\"> {restaurant.name}</h2>\n                <div>\n                    <a href={restaurant.yelpURL}>\n                        <img src={restaurant.photoURL} style={this.restaurantPhotoStyle} />\n                    </a>\n                    <div className=\"restaurantRatingPrice\">\n                        <h5> {restaurant.rating} | {restaurant.price} </h5>\n                    </div>\n                    <div className=\"restaurantDistance\">\n                        <h5> {Math.floor(restaurant.distance)} M</h5>\n                    </div>\n                </div>\n                <h4>{restaurant.address}</h4>\n                <a href={googleDirectionsURL}>\n                    <FontAwesomeIcon style={{ color: \"#797986\" }} icon={faDirections} size=\"2x\" />\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default { Match };","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nclass EndCard extends React.Component {\n    render() {\n        const textStyle = {\n            margin: \"20px\",\n            marginTop: \"5px\",\n            marginBottom: \"35px\",\n        }\n        return (\n            <div>\n                <img\n                    src={process.env.PUBLIC_URL + 'logo.png'}\n                    className=\"logo\"\n                    alt=\"Findalicious Icon\"\n                />\n                <h3> THAT'S ALL WE FOUND </h3>\n                <p style={textStyle}> Your friends might still be swiping...</p>\n\n                <Link to=\"/\">\n                    <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default EndCard;","import React from 'react';\nimport './Swiping.css';\nimport EndCard from './EndCard';\nimport Match from './Match';\nimport { Card, CardWrapper } from '../../react-swipeable-cards';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDirections } from '@fortawesome/free-solid-svg-icons';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\n\nclass Swiping extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restaurants: [],\n            matchedRestaurant: {\n                \"likeCount\": 0,\n                \"curPhotoIndex\": 0,\n                \"_id\": \"\",\n                \"placeID\": \"\",\n                \"name\": \"\",\n                \"yelpURL\": \"\",\n                \"address\": \"\",\n                \"distance\": 0,\n                \"photoURL\": \"\",\n                \"price\": \"\",\n                \"rating\": 0\n            },\n            matchOpen: false\n        };\n        this.onSwipeRight = this.onSwipeRight.bind(this);\n        this.onSwipeLeft = this.onSwipeLeft.bind(this);\n        this.onDoubleTap = this.onDoubleTap.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    closeModal() {\n        this.setState({ matchOpen: false });\n    }\n\n    getEndCard() {\n        return (\n            <EndCard />\n        );\n    }\n\n    onSwipeRight(restaurant) {\n        let socket = this.props.socket;\n        socket.emit(\"swipe\", restaurant.placeID);\n        console.log('removing: ' + restaurant.placeID + ' after swiping right');\n    }\n\n    onSwipeLeft(restaurant) {\n        let socket = this.props.socket;\n        socket.emit(\"swipe\");\n        console.log('removing: ' + restaurant.placeID + ' after swiping left');\n    }\n\n    onDoubleTap(restaurant) {\n        let restaurantsArray = this.state.restaurants;\n        let restaurantIndex = restaurantsArray.indexOf(restaurant);\n        let url = expressServer + \"/api/additionalPhotos/?id=\" + restaurant.placeID;\n        if (!restaurantsArray[restaurantIndex].additionalPhotos) {\n            // haven't fetched additional photos yet\n            fetch(url, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then(result => {\n                if (result.status === 200) {\n                    result.json().then(resultJSON => {\n                        let additionalPhotos = resultJSON.photos;\n                        restaurantsArray[restaurantIndex].additionalPhotos = additionalPhotos;\n                        restaurantsArray[restaurantIndex].photoURL = additionalPhotos[1];\n                        restaurantsArray[restaurantIndex].curPhotoIndex = 1;\n                        this.setState({ restaurants: restaurantsArray });\n                    });\n                } else {\n                    // Yelp API server did not find business details.\n                    console.error(\"Yelp API server did not find business details.\");\n                }\n            }).catch(e => {\n                console.log(e);\n            });\n        } else {\n            // additional photos have already been fetched\n            // cycle through additional photos\n            if (restaurantsArray[restaurantIndex].curPhotoIndex === 2) {\n                restaurantsArray[restaurantIndex].curPhotoIndex = 0;\n            } else {\n                restaurantsArray[restaurantIndex].curPhotoIndex += 1;\n            }\n            let curPhotoIndex = restaurantsArray[restaurantIndex].curPhotoIndex;\n            let additionalPhotos = restaurantsArray[restaurantIndex].additionalPhotos\n            restaurantsArray[restaurantIndex].photoURL = additionalPhotos[curPhotoIndex];\n            this.setState({ restaurants: restaurantsArray });\n        }\n        console.log(\"Finding next photo\");\n    }\n\n\n    redirectHome() {\n        window.location.assign('/');\n    }\n\n\n    componentDidMount() {\n        let socket = this.props.socket;\n        if (!this.props.location.state.roomNumber) {\n            this.props.history.push('/');\n        }\n\n        let roomNumber = this.props.location.state.roomNumber;\n        fetch(expressServer + \"/api/rooms/?roomNumber=\" + roomNumber, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(result => {\n            if (result.status === 200) {\n                result.json().then(resultJSON => {\n                    this.setState(resultJSON);\n                });\n            } else if (result.status === 404) {\n                // Server failed to get the current roomNumber. This really should not happen.\n                // We make the client refresh so it can leave the room and join as a new socket connection. \n                window.location.assign(\"/rooms\");\n            } else {\n                // We make the client refresh so it can leave the room and join as a new socket connection.\n                alert(\"Something went wrong.\");\n                window.setTimeout(this.redirectHome, 100);\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n\n        // Listen for errors\n        socket.on('general error', (errMsg) => {\n            alert(errMsg);\n            // We make the client refresh so it can leave the room and join as a new socket connection.\n            window.setTimeout(this.redirectHome, 100);\n        });\n\n        // Listen for matches\n        socket.on('match found', (placeID) => {\n            let restaurantName;\n            for (let i = 0; i < this.state.restaurants.length; i++) {\n                if (this.state.restaurants[i].placeID === placeID) {\n                    restaurantName = this.state.restaurants[i].name;\n                    this.setState({ matchedRestaurant: this.state.restaurants[i], matchOpen: true });\n                    break;\n                }\n            }\n        });\n\n        // Listen on user disconnect\n        socket.on('user disconnect', () => {\n            // Make everyone disconnect for now, since it may be impossible to get matches\n            window.location.assign('/disconnect');\n        });\n\n        // Listen on user attempting to swipe when not in a room\n        socket.on(\"not in room swipe\", () => {\n            alert(\"You've disconnected or refreshed the page.\");\n            window.setTimeout(this.redirectHome, 100);\n        });\n    }\n\n    popupStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"240px\",\n        animation: \"popup 600ms\",\n        padding: \"15px\",\n        backgroundColor: \"white\",\n        borderRadius: \"15px\",\n        boxShadow: \"0 0 22px 2px #ffffffc4\",\n        webkitBoxShadow: \"0 0 18px 0px #ffffffc4\"\n    }\n\n    restaurantPhotoStyle = {\n        width: \"240px\",\n        height: \"240px\",\n        borderRadius: \"10px\"\n    }\n\n    render() {\n\n        const wrapperStyle = {\n            width: \"100vw\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: \"0%\",\n            top: \"0%\",\n        }\n\n        let restaurant = this.state.matchedRestaurant\n\n        let googleDirectionParameterArray = restaurant.name.split(\" \");\n        let googleDirectionsParameter = \"\";\n        for (let word = 0; word < googleDirectionParameterArray.length - 1; word++) {\n            googleDirectionsParameter += googleDirectionParameterArray[word] + \"+\";\n        }\n        googleDirectionsParameter += googleDirectionParameterArray[googleDirectionParameterArray.length - 1];\n        let googleDirectionsURL = \"https://www.google.com/maps/dir/?api=1&destination=\" + googleDirectionsParameter;\n\n        return (\n            <div>\n                <link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'></link>\n                <CardWrapper style={wrapperStyle} addEndCard={this.getEndCard.bind(this)}>\n                    {this.state.restaurants.map((restaurant) =>\n                        <Card\n                            key={restaurant.placeID}\n                            data={restaurant}\n                            style={{ backgroundImage: 'url(' + restaurant.photoURL + ')' }}\n                            onSwipeRight={this.onSwipeRight.bind(this)}\n                            onSwipeLeft={this.onSwipeLeft.bind(this)}\n                            onDoubleTap={this.onDoubleTap.bind(this)}\n                        >\n                            <div className=\"restaurantName\">\n                                <h3>{restaurant.name}</h3>\n                            </div>\n                            <div className=\"restaurantRatingPrice\">\n                                <h5> {restaurant.rating} | {restaurant.price} </h5>\n                            </div>\n                            <div className=\"restaurantDistance\">\n                                <h5> {Math.floor(restaurant.distance)}M </h5>\n                            </div>\n                        </Card>\n                    )}\n                </CardWrapper>\n                <Popup\n                    open={this.state.matchOpen}\n                    closeOnDocumentClick\n                    onClose={this.closeModal}\n                    contentStyle={this.popupStyle}\n                >\n                    <div>\n                        <h3 className=\"matchTitle\">You all liked</h3>\n                        <h2 className=\"matchName\"> {restaurant.name}</h2>\n                        <div>\n                            <a href={restaurant.yelpURL}>\n                                <img src={restaurant.photoURL} style={this.restaurantPhotoStyle} />\n                            </a>\n                            <div className=\"restaurantRatingPrice\">\n                                <h5> {restaurant.rating} | {restaurant.price} </h5>\n                            </div>\n                            <div className=\"restaurantDistance\">\n                                <h5> {Math.floor(restaurant.distance)} M</h5>\n                            </div>\n                        </div>\n                        <h4>{restaurant.address}</h4>\n                        <a href={googleDirectionsURL}>\n                            <FontAwesomeIcon style={{ color: \"#797986\" }} icon={faDirections} size=\"2x\" />\n                        </a>\n                    </div>\n                </Popup>\n            </div >\n        );\n    }\n}\n\nexport default Swiping;","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport { RoomNotFound, PageNotFound, UserDisconnect, RoomAlreadyStartedSwiping } from './components/NotFound/NotFound';\nimport CreateRoom from './components/Rooms/CreateRoom';\nimport Lobby from './components/Rooms/Lobby';\nimport './App.css';\nimport io from 'socket.io-client';\nimport TinderCardComponent from './components/TinderCard/TinderCard';\nimport Swiping from './components/Swiping/Swiping';\n\nlet expressServer = process.env.REACT_APP_EXPRESS_SERVER;\nlet socket = io.connect(expressServer, {\n  reconnection: true\n});\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/rooms/:roomNumber\" render={(props) => (<Lobby {...props} socket={socket} />)} />\n            <Route exact path='/' render={(props) => (<Home {...props} socket={socket} />)} />\n            <Route exact path='/create' render={(props) => (<CreateRoom {...props} socket={socket} />)} />\n            <Route exact path='/swiping' render={(props) => (<Swiping {...props} socket={socket} />)} />\n            <Route exact path=\"/rooms\" component={RoomNotFound} />\n            <Route exact path=\"/test\" component={TinderCardComponent} />\n            <Route exact path=\"/disconnect\" component={UserDisconnect} />\n            <Route exact path=\"/already-swiping\" component={RoomAlreadyStartedSwiping} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport { App, socket };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}